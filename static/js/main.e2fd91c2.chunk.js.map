{"version":3,"sources":["state/filter/Context.js","state/filter/types.js","state/filter/reducer.js","state/filter/Provider.jsx","state/todos/Context.js","state/todos/types.js","state/todos/reducer.js","state/todos/Provider.jsx","components/TodoCreator/style.js","components/Form/index.js","components/TodoCreator/index.jsx","state/todos/actions.js","components/TodoItem/style.js","components/TodoItem/index.jsx","components/TodoModal/style.js","components/TodoModal/index.jsx","components/TodoList/style.js","components/TodoList/index.jsx","components/TodoFooter/style.js","components/TodoFooter/index.jsx","state/filter/actions.js","pages/TodoApp/index.jsx","App.jsx","index.jsx"],"names":["Context","createContext","TOOGLE_FILTER","reducer","_","action","type","filterTypes","console","log","payload","filter","Error","Provider","children","useReducer","filterReducer","dispatchToFilter","value","ADD_TODO","TOGGLE_TODO_STATUS","TOGGLE_TODO_TITLE","REMOVE_TODO","state","todosTypes","concat","id","uuidv4","title","completed","map","todo","todosReducer","todos","dispatchToTodos","TodoCreatorStyle","styled","header","colors","bg","color","hover","Form","form","TodoCreate","inputTitle","useRef","useContext","TodosContext","useFormik","initialValues","validationSchema","yup","required","onSubmit","values","formikBag","setFieldValue","getFieldProps","errors","handleSubmit","useEffect","current","focus","placeholder","autoComplete","className","ref","TodoItemStyle","li","props","status","TodoItem","handleDelete","handleStatus","showModal","useState","isChecked","setIsChecked","handleCheck","useCallback","evt","target","checked","onClick","onChange","TodoModalStyle","div","TodoModal","hideModal","handleTitle","getTitle","TodoListStyle","main","filteredList","list","item","TodoList","FilterContext","currentId","setCurrentId","todosActions","find","TodoFooterStyle","footer","TodoFooter","selectValue","setSelectValue","handleSelectValue","handleFilter","filterActions","option","TodoApp","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.e2fd91c2.chunk.js","sourcesContent":["import {\n    createContext\n} from 'react';\n\nconst Context = createContext();\n\nexport default Context;","export const TOOGLE_FILTER = 'TOOGLE_FILTER';","import * as filterTypes from './types';\n\nexport default function reducer(_, action) {\n    switch (action.type) {\n        case filterTypes.TOOGLE_FILTER:\n            console.log('here: ' + action.payload)\n            return action.payload.filter;\n        default:\n            throw new Error();\n    }\n}","import React, { useReducer } from 'react';\nimport FilterContext from './Context';\nimport filterReducer from './reducer';\n\nexport default function Provider({ children }) {\n    const [filter, dispatchToFilter] = useReducer(filterReducer, 'all');\n    return (\n        <FilterContext.Provider value={{ filter, dispatchToFilter }}>\n            {children}\n        </FilterContext.Provider>\n    )\n}","import {\n    createContext\n} from 'react';\n\nconst Context = createContext();\n\nexport default Context;","export const ADD_TODO = 'ADD_TODO';\nexport const TOGGLE_TODO_STATUS = 'TOGGLE_TODO_STATUS';\nexport const TOGGLE_TODO_TITLE = 'TOGGLE_TODO_TITLE';\nexport const REMOVE_TODO = 'REMOVE_TODO';","import * as todosTypes from './types';\nimport {\n    v4 as uuidv4\n} from 'uuid';\n\nexport default function reducer(state, action) {\n    switch (action.type) {\n        case todosTypes.ADD_TODO:\n            return state.concat({\n                id: uuidv4(),\n                title: action.payload.title,\n                completed: false\n            });\n        case todosTypes.TOGGLE_TODO_STATUS:\n            return state.map((todo) => {\n                if (todo.id === action.payload.id) {\n                    return {\n                        ...todo,\n                        completed: action.payload.completed\n                    }\n                } else {\n                    return todo;\n                }\n            });\n        case todosTypes.TOGGLE_TODO_TITLE:\n            return state.map((todo) => {\n                if (todo.id === action.payload.id) {\n                    return {\n                        ...todo,\n                        title: action.payload.title\n                    }\n                } else {\n                    return todo;\n                }\n            });\n        case todosTypes.REMOVE_TODO:\n            return state.filter((todo) => {\n                return todo.id !== action.payload.id;\n            });\n        default:\n            throw new Error();\n    }\n}","import React, { useReducer } from 'react';\nimport TodosContext from './Context';\nimport todosReducer from './reducer';\n\nexport default function Provider({ children }) {\n    const [todos, dispatchToTodos] = useReducer(todosReducer, []);\n    return (\n        <TodosContext.Provider value={{ todos, dispatchToTodos }}>\n            {children}\n        </TodosContext.Provider>\n    )\n}","import styled from 'styled-components';\n\nconst colors = {\n    bg: '#2D3340'\n}\n\nconst TodoCreatorStyle = styled.header `\n    background-color: ${colors.bg};\n    width: 100%;\n    height: 200px;\n    top: 0px;\n    font-size: 30px;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    position: sticky;\n    grid-area: header;\n`;\n\nexport default TodoCreatorStyle;","import styled from 'styled-components';\n\nconst colors = {\n    input: {\n        bg: '#3B4252',\n        color: '#ECEFF4'\n    },\n    bgMsg: '#BF616A',\n    btnSubmit: {\n        bg: '#00929D',\n        color: '#ECEFF4',\n        hover: '#326881'\n    },\n}\n\nconst Form = styled.form `\n    display: flex;\n    flex-direction: column;\n    flex-basis: 25%;\n    text-align: center;\n\n    .input {\n        background-color: ${colors.input.bg};\n        color: ${colors.input.color};\n        outline: none;\n        border: none;\n        font-size: 25px;\n        border-radius: 5px;\n        padding: 5px;\n        margin: 5px;\n    }\n\n    .msg-erro {\n        color: ${colors.bgMsg};\n        margin-bottom: 5px;\n        font-size: 16px;\n    }\n    \n    .btn {\n        margin: 5px;\n        background-color: ${colors.btnSubmit.bg};\n        color: ${colors.btnSubmit.color};\n        cursor: pointer;\n        border: none;\n        font-size: 25px;\n        border-radius: 5px;\n        padding: 5px;\n        outline: none;\n\n        :hover {\n            background-color: #326881;\n        }\n    }\n`;\n\nexport default Form;","import { useFormik } from 'formik';\nimport React, { useContext, useEffect, useRef } from 'react';\nimport * as yup from 'yup';\nimport * as todosActions from '../../state/todos/actions';\nimport TodosContext from '../../state/todos/Context';\nimport TodoCreatorStyle from './style';\nimport Form from '../Form';\n\nexport default function TodoCreate() {\n    const inputTitle = useRef(null);\n\n    const { dispatchToTodos } = useContext(TodosContext);\n\n    const { getFieldProps, errors, handleSubmit } = useFormik({\n        initialValues: {\n            title: '',\n        },\n        validationSchema: yup.object({\n            title: yup.string().required('Você deve preencher com uma tarefa.')\n        }),\n        onSubmit: (values, formikBag) => {\n            dispatchToTodos(todosActions.addTodo(values.title));\n            formikBag.setFieldValue('title', '', false);\n        }\n    });\n\n    useEffect(() => {\n        inputTitle.current.focus();\n    }, []);\n\n    return (\n        <TodoCreatorStyle>\n            <Form onSubmit={handleSubmit}>\n                <input\n                    type='text'\n                    placeholder='Nova tarefa'\n                    autoComplete='off'\n                    className='input'\n                    ref={inputTitle}\n                    {...getFieldProps('title')}\n                />\n                {errors.title ? (\n                    <small className='msg-erro'>{errors.title}</small>\n                ) : null}\n                <button type='submit' className='btn'>Adicionar tarefa</button>\n            </Form>\n        </TodoCreatorStyle>\n    );\n}","import * as todosTypes from './types';\n\nexport function addTodo(title) {\n    return {\n        type: todosTypes.ADD_TODO,\n        payload: {\n            title\n        }\n    }\n}\n\nexport function toggleTodoStatus(id, completed) {\n    return {\n        type: todosTypes.TOGGLE_TODO_STATUS,\n        payload: {\n            id: id,\n            completed: completed\n        }\n    }\n}\n\nexport function toggleTodoTitle(id, title) {\n    return {\n        type: todosTypes.TOGGLE_TODO_TITLE,\n        payload: {\n            id: id,\n            title: title\n        }\n    }\n}\n\nexport function removeTodo(id) {\n    return {\n        type: todosTypes.REMOVE_TODO,\n        payload: {\n            id: id\n        }\n    }\n}","import styled from 'styled-components';\n\nconst TodoItemStyle = styled.li `\n    text-decoration: ${props => props.status ? 'line-through' : 'none'};\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n    margin: 35px auto;\n    width: 80%;\n    padding: 10px;\n    border: 3px solid #FFF;\n    border-radius: 15px;\n\n    .btn-delete, .btn-edit {\n        background-color: #FFF0;\n        color: #FFF;\n        border: none;\n        font-size: 25px;\n        cursor: pointer;\n\n        :hover {\n            color: #DDD;\n        }\n    }\n\n    .status {\n        width: 40px;\n        height: 20px;\n        position: relative;\n        border-radius: 10px;\n        background-color: #FFF;\n        box-shadow: inset 0px 0px 4px 2px #DDD;\n        appearance: none;\n        cursor: pointer;\n        outline: none;\n\n        :checked {\n            background-color: #999;\n            box-shadow: inset 0px 0px 4px 2px #AAA;\n            \n            ::before {\n                left: 20px;\n            }\n        }\n\n        ::before {\n            content: \"\";\n            width: 20px;\n            height: 20px;\n            position: absolute;\n            top: 0px;\n            left: 0px;\n            border-radius: 50%;\n            background-color: #AAA;\n            box-shadow: inset 0px 0px 4px 2px #777;\n            transform: scale(1.1);\n            transition: all 400ms;\n        }\n    }\n\n    @media only screen and (max-width: 800px) {\n        .title {\n            width: 60%;\n        }\n    }\n\n    @media only screen and (max-width: 360px) {\n        &{\n            flex-direction: column;\n        }\n        .title {\n            width: 100%;\n        }\n    }\n`;\n\nexport default TodoItemStyle;","import React, { useCallback, useEffect, useState } from 'react';\nimport { MdCreate, MdDelete } from 'react-icons/md';\nimport TodoItemStyle from './style';\n\nexport default function TodoItem({ id, title, completed, handleDelete, handleStatus, showModal }) {\n    const [isChecked, setIsChecked] = useState(completed);\n\n    const handleCheck = useCallback((evt) => {\n        setIsChecked(evt.target.checked);\n    }, [setIsChecked]);\n\n    useEffect(() => {\n        handleStatus(id, isChecked);\n    }, [handleStatus, isChecked, id]);\n\n    return (\n        <TodoItemStyle status={completed}>\n            <span className='title'>{title}</span>\n\n            <div className='btn-actions'>\n                <button onClick={showModal} className=\"btn-edit\"><MdCreate /></button>\n                <input\n                    type=\"checkbox\"\n                    checked={isChecked}\n                    onChange={handleCheck}\n                    className=\"status\"\n                />\n                <button onClick={handleDelete} className=\"btn-delete\"><MdDelete /></button>\n            </div>\n        </TodoItemStyle>\n    );\n}","import styled from 'styled-components';\n\nconst TodoModalStyle = styled.div `\n    .backdrop {\n        background-color: rgba(0, 0, 0, .5);\n        width: 100%;\n        height: 100%;\n        position: fixed;\n        top: 0px;\n        left: 0px;\n    }\n\n    .modal-content {\n        width: 800px;\n        height: 400px;\n        margin: auto;\n        position: fixed;\n        top: calc(50% - 200px);\n        left: calc(50% - 400px);\n        border-radius: 10px;\n        background-color: #2D3340;\n        text-align: center;\n        z-index: 1;\n        color: #ECEFF4;\n        -webkit-animation-name: slideIn;\n        -webkit-animation-duration: 0.4s;\n        animation-name: slideIn;\n        animation-duration: 0.4s;\n\n        @-webkit-keyframes slideIn {\n            from {top: -300px; opacity: 0} \n            to {top: calc(50% - 200px); opacity: 1}\n        }\n\n        @keyframes slideIn {\n            from {top: -300px; opacity: 0}\n            to {top: calc(50% - 200px); opacity: 1}\n        }\n    }\n\n    form {\n        margin: 10px 80px;\n    }\n\n    .btn-close {\n        position: absolute;\n        top: 10px;\n        right: 10px;\n        font-size: 25px;\n        background-color: #FFF0;\n        color: #ECEFF4;\n        border: none;\n        cursor: pointer;\n        outline: none;\n    }\n\n    @media only screen and (max-width: 800px) {\n        .modal-content {\n            left: 0;\n            width: 95%;\n            text-align: center;\n            margin: 10px;\n        }\n\n        form {\n            margin: 10px 10px;\n        }\n    }\n`;\n\nexport default TodoModalStyle;","import { useFormik } from 'formik';\nimport React from 'react';\nimport { MdClose } from 'react-icons/md';\nimport * as yup from 'yup';\nimport Form from '../Form';\nimport TodoModalStyle from './style';\n\nexport default function TodoModal({ hideModal, handleTitle, getTitle, id }) {\n    const { getFieldProps, errors, handleSubmit } = useFormik({\n        initialValues: {\n            title: getTitle(id),\n        },\n        validationSchema: yup.object({\n            title: yup.string().required('Você deve preencher com uma tarefa.')\n        }),\n        onSubmit: (values, formikBag) => {\n            handleTitle(id, values.title);\n            formikBag.setFieldValue('title', '', false);\n        }\n    });\n\n    return (\n        <TodoModalStyle>\n            <div className=\"backdrop\" onClick={hideModal}></div>\n            <div className=\"modal-content\">\n                <h1>Modal</h1>\n                <button onClick={hideModal} className='btn-close'><MdClose /></button>\n                <Form onSubmit={handleSubmit}>\n                    <input\n                        type='text'\n                        placeholder='Novo título'\n                        autoComplete='off'\n                        className='input'\n                        {...getFieldProps('title')}\n                    />\n                    {errors.title ? (\n                        <small className='msg-erro'>{errors.title}</small>\n                    ) : null}\n                    <button type='submit' className='btn'>Atualizar tarefa</button>\n                </Form>\n            </div>\n        </TodoModalStyle>\n    );\n}","import styled from 'styled-components';\n\nconst TodoListStyle = styled.main `\n    grid-area: main;\n    background-color: #3B4252;\n    color: #ECEFF4;\n    overflow-y: scroll;\n    \n    .list-todo {\n        list-style: none;\n        padding-left: 20px;\n        padding-right: 20px;\n    }\n`\n\nexport default TodoListStyle;","import React, { useCallback, useContext, useState } from 'react';\nimport FilterContext from '../../state/filter/Context';\nimport * as todosActions from '../../state/todos/actions';\nimport TodosContext from '../../state/todos/Context';\nimport TodoItem from '../TodoItem';\nimport TodoModal from '../TodoModal';\nimport TodoListStyle from './style';\n\nfunction filteredList(list, filter) {\n    switch (filter) {\n        case 'all':\n            return list;\n        case 'active':\n            return list.filter((item) => {\n                return item.completed === false\n            });\n        case 'completed':\n            return list.filter((item) => {\n                return item.completed === true\n            });\n        default:\n            throw new Error();\n    }\n}\n\nexport default function TodoList() {\n    const { filter } = useContext(FilterContext);\n\n    const [currentId, setCurrentId] = useState(null);\n\n    const { todos, dispatchToTodos } = useContext(TodosContext);\n\n    const showModal = useCallback((id) => {\n        setCurrentId(id);\n    }, []);\n\n    const hideModal = useCallback(() => {\n        setCurrentId(null);\n    }, []);\n\n    const handleDelete = useCallback((id) => {\n        dispatchToTodos(todosActions.removeTodo(id));\n    }, [dispatchToTodos]);\n\n    const handleStatus = useCallback((id, completed) => {\n        dispatchToTodos(todosActions.toggleTodoStatus(id, completed));\n    }, [dispatchToTodos]);\n\n    const handleTitle = useCallback((id, title) => {\n        dispatchToTodos(todosActions.toggleTodoTitle(id, title));\n        hideModal();\n    }, [dispatchToTodos, hideModal]);\n\n    const getTitle = useCallback((id) => {\n        const currentTodo = todos.find((todo) => {\n            return todo.id === id\n        });\n        return currentTodo.title;\n    }, [todos]);\n\n    return (\n        <TodoListStyle>\n            <ul className=\"list-todo\">\n                {filteredList(todos, filter).map((todo) => (\n                    <TodoItem\n                        key={todo.id}\n                        id={todo.id}\n                        title={todo.title}\n                        showModal={() => { showModal(todo.id) }}\n                        completed={todo.completed}\n                        handleStatus={handleStatus}\n                        handleDelete={() => { handleDelete(todo.id) }}\n                    />\n                ))}\n            </ul>\n            {currentId && <TodoModal\n                hideModal={hideModal}\n                handleTitle={handleTitle}\n                id={currentId}\n                getTitle={getTitle}\n            />}\n        </TodoListStyle>\n    );\n}","import styled from 'styled-components';\n\nconst TodoFooterStyle = styled.footer`\n    display: flex;\n    background-color: #2D3340;\n    color: #FFF; \n    height: 150px;\n    justify-content: center;\n    align-items: center;\n    \n    .select-filter {\n        flex-basis: 25%;\n        font-size: 25px;\n        border-radius: 5px;\n        padding: 5px;\n        background-color: #3B4252;\n        color: #ECEFF4;\n        border: none;\n        outline: none;\n        cursor: pointer;\n    }\n`;\n\nexport default TodoFooterStyle;","import React, { useCallback, useContext, useEffect, useState } from 'react';\nimport * as filterActions from '../../state/filter/actions';\nimport FilterContext from '../../state/filter/Context';\nimport TodoFooterStyle from './style';\n\nexport default function TodoFooter() {\n    const { filter, dispatchToFilter } = useContext(FilterContext);\n    const [selectValue, setSelectValue] = useState(filter);\n\n    const options = [\n        { value: 'all', title: 'Todas as tarefas' },\n        { value: 'active', title: 'Tarefas a se fazer' },\n        { value: 'completed', title: 'Tarefas realizadas' }\n    ];\n\n    const handleSelectValue = useCallback((evt) => {\n        setSelectValue(evt.target.value);\n    }, [setSelectValue])\n\n    const handleFilter = useCallback((filter) => {\n        dispatchToFilter(filterActions.toogleFilter(filter));\n    }, [dispatchToFilter]);\n\n    useEffect(() => {\n        handleFilter(selectValue)\n    }, [handleFilter, selectValue]);\n\n    return (\n        <TodoFooterStyle>\n            <select value={selectValue} onChange={handleSelectValue} className=\"select-filter\">\n                {options.map((option) => (\n                    <option key={option.value} value={option.value}>{option.title}</option>\n                ))}\n            </select>\n        </TodoFooterStyle>\n    );\n}","import * as filterTypes from './types';\n\nexport function toogleFilter(filter) {\n    return {\n        type: filterTypes.TOOGLE_FILTER,\n        payload: {\n            filter: filter\n        }\n    }\n}","import React from 'react';\nimport TodoCreator from '../../components/TodoCreator';\nimport TodoList from '../../components/TodoList';\nimport TodoFooter from '../../components/TodoFooter';\n\nexport default function TodoApp() {\n    return (\n        <>\n            <TodoCreator />\n            <TodoList />\n            <TodoFooter />\n        </>\n    );\n}","import React from 'react';\nimport FilterProvider from './state/filter/Provider';\nimport TodoProvider from './state/todos/Provider';\nimport TodoApp from './pages/TodoApp/';\n\nfunction App() {\n  return (\n    <TodoProvider>\n      <FilterProvider>\n        <TodoApp />\n      </FilterProvider>\n    </TodoProvider>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}